# -*- coding: utf-8 -*-
"""TF_agrupamento

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mGNKpUxhF1PSnmg5aGmQi9llK0ilq9Il
"""

#importando as bibliotecas  necessarias
import numpy as np
from sklearn.cluster import KMeans

# Matriz filmes assistidos
filmes_assistidos = np.array([
    [1,0,0,1,1],
    [1,1,0,0,0],
    [0,1,1,0,1],
    [0,0,1,1,0],
    [1,0,1,0,1],
    [0,1,0,1,0]
   ])

# Definido o numero de clusters(grupo)
num_clusters=2

# inicializar o modelo
kmeans = KMeans(n_clusters=num_clusters,
                random_state=0, n_init=10)

# treinando o modelo
kmeans.fit(filmes_assistidos)

# Classificando os usuarios
grupos_indices = kmeans.predict(filmes_assistidos)

# Exibir os dados
print("Usuario pertence ao seguinte grupo:")
for i, clusters in enumerate(grupos_indices):
     print(f"Usuario {i+1} pertence ao grupo {clusters}")


print("\nFilmes assistidos:")
for i in range(len(filmes_assistidos)):
    assistidos = np.where(filmes_assistidos[i] == 1)[0] + 1
    print(f"Usuario {i+1} assistiu aos filmes: {assistidos}")

# Funçao que recomenda filmes
def recomendar_filmes(filmes, filmes_assistidos, grupos_indices):

  filmes = np.array(filmes)

  # Encontrar o grupo usuario no mesmo grupo
  usuario_id = len(filmes_assistidos)
  grupo_usuario = kmeans.predict([filmes])[0]

  # Encontrar todos os usuarios no mesmo grupo
  usuario_no_mesmo_grupo = [i for i in range(len(grupos_indices))
  if grupos_indices[i] == grupo_usuario]

  # Filmes assistidos pelos usuarios no mesmo grupo
  filmes_recomendados = set()
  for usuario in usuario_no_mesmo_grupo:
   filmes_assistidos_usuario = np.where(filmes_assistidos[usuario] == 1)[0]
   filmes_recomendados.update(filmes_assistidos_usuario)

  # Remover filmes que o usuario ja assistiu
  filmes_recomendados = filmes_recomendados - set(np.where(filmes == 1)[0])

  # Ajustar os indices dos filmes recomendados (de volta para 1-based)
  filmes_recomendados = [filmes + 1 for filme in filmes_recomendados]

  return sorted(filmes_recomendados)

  # Exemplo de uso da função recomendar_filmes
filmes_assistidos_usuario = [1,0,1,0] # Vetor de filmes
  # assistidos (por exemplo, assistiu aos filmes 1 e 3)
filmes_recomendados = recomendar_filmes(filmes_assistidos_usuario,
                                          filmes_assistidos, grupos_indices)

print(f"\nFilmes recomendados : {filmes_recomendados}")

def multiplicacao(num1, num2) :
  mult = num1 * num2
  return mult

print(multiplicacao(7,10))
print(multiplicacao(8,10))